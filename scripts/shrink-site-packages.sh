#!/usr/bin/env bash

# shrink based on https://blog.mapbox.com/aws-lambda-python-magic-e0f6a407ffc6
# to get list of unneeded packages:
# mkdir package
# pip install --target package boto3
# ls -1 package | grep -v info

set -e

PYTHON_VERSION=38
PROJECT_DIR=$(realpath $(dirname "${BASH_SOURCE[0]}")/..)
PIP=pip # $PROJECT_DIR/venv/bin/pip
SITE_PACKAGES=$($PIP show pip | sed -n 's/^Location: //p')
TMP=$HOME/tmp

rm -rf $TMP/site-packages
cp -r $SITE_PACKAGES $TMP

cd $TMP/site-packages

# We can remove all tests and other unused files (such as Mac libraries)
find . -name "*-info" -type d -exec rm -rf {} +
find . -name "tests" -type d -exec rm -rf {} +
find . -name "*darwin.so" -exec rm -f {} +

# Here we remove package that will be present in AWS Lambda env
rm -rf boto3
rm -rf botocore
rm -rf dateutil
rm -rf docutils
rm -rf jmespath
rm -rf pip
rm -rf *pytest*
rm -rf s3transfer
rm -rf setuptools
rm -rf urllib3

# Keep byte-code compiled files for faster Lambda startup
find . -type f -name '*.pyc' | while read f; do n=$(echo $f | sed 's/__pycache__\///' | sed "s/.cpython-$PYTHON_VERSION//"); cp $f $n; done;
find . -type d -a -name '__pycache__' -print0 | xargs -0 rm -rf
find . -type f -a -name '*.py' -print0 | xargs -0 rm -f

# Create zip of just site packages
rm -rf $PROJECT_DIR/site-packages.zip
zip -qr9 $PROJECT_DIR/site-packages.zip .
